---
- name: Complex Network Configuration
  hosts: routers
  gather_facts: no
  tasks:
    - name: Verify connectivity
      ping:

    - name: Configure interfaces
      ios_config:
        lines:
          - interface {{ item.interface }}
          - ip address {{ item.ip }} {{ item.netmask }}
          - no shutdown
      loop:
        - { interface: "GigabitEthernet0/0", ip: "192.168.10.1", netmask: "255.255.255.0" }
        - { interface: "GigabitEthernet0/1", ip: "192.168.20.1", netmask: "255.255.255.0" }
        # Add all interface configurations here for each router

    - name: Configure OSPF
      ios_config:
        lines:
          - router ospf 1
          - network {{ item.network }} {{ item.wildcard }} area 0
      loop:
        - { network: "192.168.10.0", wildcard: "0.0.0.255" }
        - { network: "192.168.20.0", wildcard: "0.0.0.255" }
        # Add all OSPF network statements here for each router

    - name: Generate random ACLs
      run_once: true
      local_action: command python3 generate_acls.py
      register: acl_output

    - name: Apply ACLs
      ios_config:
        lines: "{{ acl_output.stdout_lines }}"

    - name: Verify configurations
      ios_command:
        commands:
          - show running-config
          - show ip ospf neighbor
          - show access-lists
      register: show_output

    - name: Save output to file
      local_action: copy content="{{ show_output.stdout }}" dest=output.txt
